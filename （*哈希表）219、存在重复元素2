/*
给定一个整数数组和一个整数 k，判断数组中是否存在两个不同的索引 i 和 j，使得 nums [i] = nums [j]，并且 i 和 j 的差的绝对值最大为 k。

示例 1:

输入: nums = [1,2,3,1], k = 3
输出: true
示例 2:

输入: nums = [1,0,1,1], k = 1
输出: true
示例 3:

输入: nums = [1,2,3,1,2,3], k = 2
输出: false
*/

bool containsNearbyDuplicate(int* nums, int numsSize, int k) 
{
    struct hash
    {
        int value;
        UT_hash_handle hh;
    };
    
    struct hash* hash_table = NULL;
    int len = 0;
    
    for(int i = 0; i < numsSize; i++)
    {
        struct hash* h;
        if(len > k)
        {
            HASH_FIND_INT(hash_table,nums + len - k - 1,h);
            HASH_DEL(hash_table,h);
            h = NULL;
        }
        HASH_FIND_INT(hash_table,nums+i,h);
        if(h)
            return true;
        else
        {
            h = malloc(sizeof(struct hash));
            h->value = nums[i];
            HASH_ADD_INT(hash_table,value,h);
            len++;
        }
    }
    return false;
}

/*
这个是网上看到的别人的答案，还没看懂，唉。。。我好菜*——*
等看明白了再过来补充。（2019.4.12）
*/

提供另一種解法
bool containsNearbyDuplicate(int* nums, int numsSize, int k)
{
    int i, j;
    for (i=0;i<numsSize;i++)
    {
        for (j=i;j<numsSize;j++)
        {
            if( (nums[i]==nums[j]) && ((j-i)==k) )
                return 1;
        }
    }
    return 0;
}
